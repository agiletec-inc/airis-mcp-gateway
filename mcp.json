{
  "mcpServers": {
    "__comment_gateway": "=== GATEWAY (常時有効) ===",
    "docker-mcp-gateway": {
      "url": "http://localhost:9090/sse",
      "description": "Unified MCP Gateway (time, fetch, git, memory, sequentialthinking, serena)"
    },

    "__comment_core": "=== CORE TOOLS (推奨: デフォルト有効) ===",
    "context7": {
      "command": "npx",
      "args": ["-y", "@upstash/context7-mcp"],
      "description": "Library documentation search"
    },
    "filesystem": {
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-filesystem",
        "/Users/kazuki/github"
      ],
      "description": "Secure file operations with access controls"
    },
    "brave-search": {
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-brave-search"],
      "env": {
        "BRAVE_API_KEY": "${BRAVE_API_KEY}"
      },
      "description": "Web, local, news, image, video search"
    },
    "github": {
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-github"],
      "env": {
        "GITHUB_PERSONAL_ACCESS_TOKEN": "${GITHUB_PERSONAL_ACCESS_TOKEN}"
      },
      "description": "GitHub repository operations and search"
    },

    "__comment_database": "=== DATABASE (プロジェクトによる) ===",
    "mcp-postgres-server": {
      "command": "npx",
      "args": [
        "-y",
        "mcp-postgres-server",
        "--dsn",
        "${POSTGRES_CONNECTION_STRING:-postgresql://mcp_readonly:mcp_readonly_password@localhost:5432/postgres}"
      ],
      "description": "PostgreSQL database operations (connected to Supabase self-hosted)"
    },
    "sqlite": {
      "command": "uvx",
      "args": ["mcp-server-sqlite", "--db-path", "${SQLITE_DB_PATH:-./data.db}"],
      "description": "SQLite database operations"
    },

    "__comment_api": "=== API INTEGRATIONS (必要に応じて有効化) ===",
    "stripe": {
      "command": "npx",
      "args": ["-y", "@stripe/mcp", "--tools=all"],
      "env": {
        "STRIPE_SECRET_KEY": "${STRIPE_SECRET_KEY}"
      },
      "description": "Stripe payment integration"
    },
    "twilio": {
      "command": "npx",
      "args": ["-y", "@twilio-alpha/mcp"],
      "env": {
        "TWILIO_ACCOUNT_SID": "${TWILIO_ACCOUNT_SID}",
        "TWILIO_API_KEY": "${TWILIO_API_KEY}",
        "TWILIO_API_SECRET": "${TWILIO_API_SECRET}"
      },
      "description": "Twilio phone/SMS integration"
    },
    "figma": {
      "command": "npx",
      "args": ["-y", "@hapins/figma-mcp"],
      "env": {
        "FIGMA_ACCESS_TOKEN": "${FIGMA_ACCESS_TOKEN}"
      },
      "description": "Figma design file access"
    },
    "slack": {
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-slack"],
      "env": {
        "SLACK_BOT_TOKEN": "${SLACK_BOT_TOKEN}",
        "SLACK_TEAM_ID": "${SLACK_TEAM_ID}"
      },
      "description": "Slack workspace integration"
    },

    "__comment_advanced": "=== ADVANCED TOOLS (必要な人だけ) ===",
    "puppeteer": {
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-puppeteer"],
      "description": "Browser automation and web scraping"
    },
    "sentry": {
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-sentry"],
      "env": {
        "SENTRY_AUTH_TOKEN": "${SENTRY_AUTH_TOKEN}",
        "SENTRY_ORG": "${SENTRY_ORG}"
      },
      "description": "Sentry error monitoring and debugging"
    }
  }
}
